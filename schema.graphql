# * fetching SWC specific holdings
# * last n transactions (filtered for SWC)
# * keep track of user balances. costs?

type SWCUser @entity {
  "SW Capital user"
  id: ID!
  address: Bytes! # address
  holdings: [TokenBalance!]! @derivedFrom(field: "user")
  latestTransactions: [Transaction!]! @derivedFrom(field: "user")
}

# Keep record of transactions for token products
type Transaction @entity {
  "Transactions for the tradable tokens by the user"
  id: ID!
  user: SWCUser!
  transactionReceipt: TransactionReceipt!
}
type TransactionReceipt @entity {
  "Receipt of tradable tokens transactions by user"
  id: ID!
  transaction: Transaction!
  token: Token!
  from: Bytes!
  to: Bytes!
  value: BigInt!
}

# Maintain balances for token products
type Token @entity {
  "SW Capital tradable tokens"
  id: ID!
  address: Bytes!
  tokenBalances: [TokenBalance!]! @derivedFrom(field: "token")
}
type TokenBalance @entity {
  "Balances for the SWC tradable tokens"
  id: ID!
  user: SWCUser!
  balance: BigInt!
  token: Token!
}
